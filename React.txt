# rtk query with redux saga => the comment of maintainer of redux is some thing need read
https://dev.to/thisisgazzar/rtk-query-vs-redux-saga-what-to-choose-for-your-next-project-4j5g

# @desc Youtube of css man, he told about how learning not how copying like a birds
# @tag additional knowledge
https://www.youtube.com/shorts/cMtYwPcwcBU

# @desc The promises only fire one, => pub/sub handle not with this
# @tag infomation
Because promises only fire once. A promise is created/initialized, and then settled, and once settled can never be un-settled or re-settled. Calling resolve or reject a second (third, fourth, ...) time is a no-op. (Some believe it should be an error, but it isn't.) Promises are not events, they cannot recur. So for what that code is doing, a promise isn't the right tool. => event emitter, or pub/sub

# @desc This for protect your private and public routes in react app
# @tag architect 
https://www.robinwieruch.de/react-router-private-routes/

# @desc 
# @tag

# @desc This how broser work and read it for knowledge
# @tag knowledge behind
https://web.dev/howbrowserswork/

# @desc This is resource for learning pattern in frontend web
# @tag pattern design
https://www.patterns.dev/resources/


#@desc: linkfree is opensource for alternative to LinkTree.
#@tag nextjs opensource
https://github.com/EddieHubCommunity/LinkFree

#desc: blog tell about update a project to new techstack
#@tag react architecture update upgrade
https://medium.com/naukri-engineering/migrating-a-react-16-application-to-react-18-with-webpack-5-435d044b846
https://medium.com/naukri-engineering/moving-resdex-to-spa-66df3ecd665d
https://medium.com/naukri-engineering/moving-cv-detail-page-to-spa-dfd68984b110


#desc: react structure
#tag: architect
https://christopherclemmons.medium.com/structure-your-react-project-like-a-senior-developer-6cf88b5d8d73?source=user_profile---------4----------------------------

#desc frontend kit
https://github.com/sadanandpai/frontend-learning-kit.git


##dummy data
https://dummyjson.com/docs/products

## chat app with nextjs
https://www.youtube.com/watch?v=mj_Qe2jBYS4
https://github.com/shadeemerhi/imessage-graphql/blob/main/frontend/src/components/Auth/Auth.tsx


## How web browsers works with illutrations
https://dev.to/ruppysuppy/deep-dive-into-how-web-browsers-work-with-illustrations-249b


## How 5 projects to master frontend 
https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p
https://dev.to/arafat4693/top-10-full-stack-projects-for-beginners-1338

## Perf improve in frontend
https://dev.to/jacobandrewsky/frontend-web-performance-checklist-2o9j


## Design structure for react and react native
https://reboot.studio/blog/folder-structures-to-organize-react-project

## react query
https://dev.to/nischal_dutt/querying-data-using-react-query-53l2
https://dev.to/this-is-learning/react-query-usequery-36i

## git hub
https://dev.to/rajaniraiyn/understanding-the-contents-of-the-git-folder-ef

## New information about react
https://thisweekinreact.com/


# redux optimize
https://medium.com/xandr-tech/five-tips-for-working-with-redux-in-large-applications-89452af4fdcb


# react atomic design -> not atomic but thinking create some atoms => view make you feel lazy when start if not correct what you will do
https://github.com/danilowoz/react-atomic-design.git

# react -> lazy loading -> progressive loading -> progressive hydration
https://www.patterns.dev/posts/airbnb-casestudy


# Create your own react components library
:VV I like this work
